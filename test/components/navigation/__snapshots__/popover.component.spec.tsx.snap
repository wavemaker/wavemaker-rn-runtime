// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Popover component Check validity of sample component 1`] = `
<View
  accessibilityLabel="Link"
  accessible={true}
  onLayout={[Function]}
  style={
    {
      "alignSelf": "flex-start",
      "paddingBottom": 8,
      "paddingLeft": 8,
      "paddingRight": 8,
      "paddingTop": 8,
    }
  }
>
  <View
    style={
      {
        "height": undefined,
        "justifyContent": "center",
        "width": undefined,
      }
    }
    testID="non_animatableView"
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "overflow": "hidden",
          },
          [
            {
              "alignItems": "center",
              "color": "#151420",
              "flexDirection": "row",
              "overflow": "visible",
            },
            null,
            {
              "flexDirection": "row",
            },
          ],
        ]
      }
    >
      <Text
        accessibilityLabel="Link"
        accessibilityRole="link"
        accessible={true}
        style={
          {
            "color": "#151420",
            "fontFamily": "Roboto",
            "fontSize": 18,
            "paddingLeft": 8,
            "paddingRight": 8,
            "textDecorationLine": "underline",
            "userSelect": "text",
          }
        }
      >
        Link
      </Text>
    </View>
  </View>
</View>
`;
