// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WmSelect selects item correctly and updates value 1`] = `
<View>
  <View
    accessibilityRole="select"
    accessibilityState={
      {
        "disabled": false,
      }
    }
    accessible={true}
    onLayout={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#ffffff",
          "borderColor": "#dddddd",
          "borderRadius": 6,
          "borderStyle": "solid",
          "borderWidth": 1,
          "flexDirection": "row",
          "minWidth": 160,
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
        },
        {},
        {
          "backgroundColor": "#ffffff",
        },
      ]
    }
  >
    <Text
      accessible={false}
      onPress={[Function]}
      style={
        [
          {
            "color": "#151420",
            "flex": 1,
            "fontFamily": "Roboto",
            "fontSize": 16,
            "userSelect": "text",
          },
          {
            "color": "#bbbbbb",
          },
        ]
      }
      testID="undefined_i"
    >
      Select an option
    </Text>
    <View
      accessibilityLabel={null}
      accessibilityRole="button"
      accessibilityState={
        {
          "disabled": false,
        }
      }
      accessible={true}
      style={
        [
          {
            "alignSelf": "flex-start",
            "borderRadius": 32,
            "height": 40,
            "minHeight": 40,
            "paddingBottom": 12,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 12,
            "rippleColor": "transparent",
          },
          {
            "overflow": "hidden",
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 0,
          },
        ]
      }
      testID="non_animatableView"
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "overflow": "hidden",
            },
            {
              "height": "100%",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 24,
              "paddingRight": 24,
              "paddingTop": 12,
              "width": "100%",
            },
          ]
        }
        testID="undefined_a"
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "flexDirection": "row",
              },
            ]
          }
        >
          <View>
            <View
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "flexDirection": "row",
                }
              }
              testID="non_animatableView"
            >
              <View
                accessible={true}
              >
                <View>
                  <Text
                    size={12}
                    style={
                      [
                        {
                          "color": undefined,
                        },
                        {
                          "paddingLeft": 0,
                          "paddingRight": 8,
                        },
                        {
                          "transform": [
                            {
                              "rotate": "0deg",
                            },
                          ],
                        },
                      ]
                    }
                  >
                    keyboard-arrow-down
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`WmSelect selects item correctly and updates value 2`] = `
<RCTScrollView
  contentContainerStyle={{}}
  style={
    {
      "maxHeight": 1270,
      "width": "100%",
    }
  }
>
  <View>
    <View
      style={
        {
          "color": "#bbbbbb",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "overflow": "hidden",
            },
            undefined,
          ]
        }
        testID="undefined_0"
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "borderBottomColor": "#dddddd",
                "borderBottomStyle": "solid",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "paddingHorizontal": 16,
                "paddingVertical": 8,
                "width": "100%",
              },
              null,
              {},
            ]
          }
        >
          <Text
            accessible={false}
            style={
              [
                {
                  "color": "#666666",
                  "flex": 1,
                  "fontFamily": "Roboto",
                  "fontSize": 16,
                },
                {
                  "color": "#bbbbbb",
                },
              ]
            }
            testID="undefined_0"
          >
            Select an option
          </Text>
          <View>
            <View
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "flexDirection": "row",
                }
              }
              testID="non_animatableView"
            >
              <View
                accessible={true}
              >
                <View>
                  <Text
                    size={12}
                    style={
                      [
                        {
                          "color": undefined,
                        },
                        {
                          "paddingLeft": 0,
                          "paddingRight": 8,
                        },
                        {
                          "transform": [
                            {
                              "rotate": "0deg",
                            },
                          ],
                        },
                      ]
                    }
                  >
                    check
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "overflow": "hidden",
            },
            undefined,
          ]
        }
        testID="undefined_0"
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "borderBottomColor": "#dddddd",
                "borderBottomStyle": "solid",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "paddingHorizontal": 16,
                "paddingVertical": 8,
                "width": "100%",
              },
              null,
              null,
            ]
          }
        >
          <Text
            accessible={false}
            style={
              [
                {
                  "color": "#666666",
                  "flex": 1,
                  "fontFamily": "Roboto",
                  "fontSize": 16,
                },
                {
                  "color": "#666666",
                },
              ]
            }
            testID="undefined_0"
          >
            name0
          </Text>
          <View>
            <View
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "flexDirection": "row",
                }
              }
              testID="non_animatableView"
            >
              <View
                accessible={true}
              >
                <View>
                  <Text
                    size={12}
                    style={
                      [
                        {
                          "color": undefined,
                        },
                        {
                          "paddingLeft": 0,
                          "paddingRight": 8,
                        },
                        {
                          "transform": [
                            {
                              "rotate": "0deg",
                            },
                          ],
                        },
                      ]
                    }
                  >
                    check
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "overflow": "hidden",
            },
            undefined,
          ]
        }
        testID="undefined_1"
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "borderBottomColor": "#dddddd",
                "borderBottomStyle": "solid",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "paddingHorizontal": 16,
                "paddingVertical": 8,
                "width": "100%",
              },
              null,
              null,
            ]
          }
        >
          <Text
            accessible={false}
            style={
              [
                {
                  "color": "#666666",
                  "flex": 1,
                  "fontFamily": "Roboto",
                  "fontSize": 16,
                },
                {
                  "color": "#666666",
                },
              ]
            }
            testID="undefined_1"
          >
            name1
          </Text>
          <View>
            <View
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "flexDirection": "row",
                }
              }
              testID="non_animatableView"
            >
              <View
                accessible={true}
              >
                <View>
                  <Text
                    size={12}
                    style={
                      [
                        {
                          "color": undefined,
                        },
                        {
                          "paddingLeft": 0,
                          "paddingRight": 8,
                        },
                        {
                          "transform": [
                            {
                              "rotate": "0deg",
                            },
                          ],
                        },
                      ]
                    }
                  >
                    check
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "overflow": "hidden",
            },
            undefined,
          ]
        }
        testID="undefined_2"
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "borderBottomColor": "#dddddd",
                "borderBottomStyle": "solid",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "paddingHorizontal": 16,
                "paddingVertical": 8,
                "width": "100%",
              },
              {
                "borderBottomWidth": 0,
              },
              null,
            ]
          }
        >
          <Text
            accessible={false}
            style={
              [
                {
                  "color": "#666666",
                  "flex": 1,
                  "fontFamily": "Roboto",
                  "fontSize": 16,
                },
                {
                  "color": "#666666",
                },
              ]
            }
            testID="undefined_2"
          >
            name2
          </Text>
          <View>
            <View
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "flexDirection": "row",
                }
              }
              testID="non_animatableView"
            >
              <View
                accessible={true}
              >
                <View>
                  <Text
                    size={12}
                    style={
                      [
                        {
                          "color": undefined,
                        },
                        {
                          "paddingLeft": 0,
                          "paddingRight": 8,
                        },
                        {
                          "transform": [
                            {
                              "rotate": "0deg",
                            },
                          ],
                        },
                      ]
                    }
                  >
                    check
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`WmSelect selects item correctly and updates value 3`] = `
<View>
  <View
    accessibilityRole="select"
    accessibilityState={
      {
        "disabled": false,
      }
    }
    accessible={true}
    onLayout={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#ffffff",
          "borderColor": "#dddddd",
          "borderRadius": 6,
          "borderStyle": "solid",
          "borderWidth": 1,
          "flexDirection": "row",
          "minWidth": 160,
          "paddingBottom": 12,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 12,
        },
        {},
        {
          "backgroundColor": "#ffffff",
        },
      ]
    }
  >
    <Text
      accessible={false}
      onPress={[Function]}
      style={
        [
          {
            "color": "#151420",
            "flex": 1,
            "fontFamily": "Roboto",
            "fontSize": 16,
            "userSelect": "text",
          },
          {
            "color": "#bbbbbb",
          },
        ]
      }
      testID="undefined_i"
    >
      Select an option
    </Text>
    <View
      accessibilityLabel={null}
      accessibilityRole="button"
      accessibilityState={
        {
          "disabled": false,
        }
      }
      accessible={true}
      style={
        [
          {
            "alignSelf": "flex-start",
            "borderRadius": 32,
            "height": 40,
            "minHeight": 40,
            "paddingBottom": 12,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 12,
            "rippleColor": "transparent",
          },
          {
            "overflow": "hidden",
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 0,
          },
        ]
      }
      testID="non_animatableView"
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "overflow": "hidden",
            },
            {
              "height": "100%",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 24,
              "paddingRight": 24,
              "paddingTop": 12,
              "width": "100%",
            },
          ]
        }
        testID="undefined_a"
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              {
                "flexDirection": "row",
              },
            ]
          }
        >
          <View>
            <View
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "flexDirection": "row",
                }
              }
              testID="non_animatableView"
            >
              <View
                accessible={true}
              >
                <View>
                  <Text
                    size={12}
                    style={
                      [
                        {
                          "color": undefined,
                        },
                        {
                          "paddingLeft": 0,
                          "paddingRight": 8,
                        },
                        {
                          "transform": [
                            {
                              "rotate": "0deg",
                            },
                          ],
                        },
                      ]
                    }
                  >
                    keyboard-arrow-down
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
