// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Datetime component Check validity of sample component 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
>
  <View
    style={
      [
        {
          "backgroundColor": "#ffffff",
          "borderColor": "#dddddd",
          "borderRadius": 6,
          "borderStyle": "solid",
          "borderWidth": 1,
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 8,
          "width": "100%",
        },
        {},
        null,
      ]
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "flex": 1,
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            [
              {
                "color": "#151420",
                "fontFamily": "Roboto",
                "fontSize": 16,
                "userSelect": "text",
              },
              {
                "color": "#bbbbbb",
              },
            ]
          }
        >
          Select date time
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <View>
          <View
            style={
              {
                "alignItems": "center",
                "alignSelf": "center",
                "flexDirection": "row",
              }
            }
            testID="non_animatableView"
          >
            <View>
              <View>
                <Text
                  size={12}
                  style={
                    [
                      {
                        "color": undefined,
                      },
                      {
                        "fontSize": 24,
                        "paddingLeft": 0,
                        "paddingRight": 8,
                      },
                      {
                        "transform": [
                          {
                            "rotate": "0deg",
                          },
                        ],
                      },
                    ]
                  }
                >
                  calendar
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
